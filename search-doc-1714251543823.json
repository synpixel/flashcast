[{"title":"Getting Started","type":0,"sectionRef":"#","url":"/flashcast/docs/intro","content":"","keywords":""},{"title":"Installation​","type":1,"pageTitle":"Getting Started","url":"/flashcast/docs/intro#installation","content":"Flashcast is up on Wally. You can install it simply by putting this in your wally.toml file Flashcast = &quot;synpixel/flashcast@2.5.0&quot;  "},{"title":"Signal","type":0,"sectionRef":"#","url":"/flashcast/api/Signal","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Signal","url":"/flashcast/api/Signal#functions","content":" "},{"title":"connect​","type":1,"pageTitle":"Signal","url":"/flashcast/api/Signal#connect","content":"&lt;/&gt; Signal:connect(callback: (T...) → ()) → Connection   "},{"title":"once​","type":1,"pageTitle":"Signal","url":"/flashcast/api/Signal#once","content":"&lt;/&gt; Signal:once(callback: (T...) → ()) → Connection   "},{"title":"fire​","type":1,"pageTitle":"Signal","url":"/flashcast/api/Signal#fire","content":"&lt;/&gt; Signal:fire(...: T...) → ()   "},{"title":"wait​","type":1,"pageTitle":"Signal","url":"/flashcast/api/Signal#wait","content":"&lt;/&gt; Signal:wait() → T...  "},{"title":"Usage","type":0,"sectionRef":"#","url":"/flashcast/docs/usage","content":"","keywords":""},{"title":"Examples​","type":1,"pageTitle":"Usage","url":"/flashcast/docs/usage#examples","content":"https://www.roblox.com/games/17247702703/Flashcast-Rocketshttps://create.roblox.com/store/asset/17307837568/Flashcast-Rocket-Launcher "},{"title":"Useful Hooks","type":0,"sectionRef":"#","url":"/flashcast/docs/useful-hooks","content":"","keywords":""},{"title":"Max Distance​","type":1,"pageTitle":"Useful Hooks","url":"/flashcast/docs/useful-hooks#max-distance","content":"local function maxDistance(cap: number) return function(raycast: Flashcast.Raycast) if raycast.state.distanceTraveled &gt; cap then return Flashcast.Result.Stop end return end end  local cap = 1000 local flashcast = Flashcast.new():beforeStep(maxDistance(cap))  "},{"title":"Acceleration​","type":1,"pageTitle":"Useful Hooks","url":"/flashcast/docs/useful-hooks#acceleration","content":"local function accelerate(towards: Vector3) return function(raycast: Flashcast.Raycast, deltaTime: number) if towards.Magnitude == 0 then return end local parallelComponent = raycast.direction:Dot(towards.Unit) * towards.Unit local perpendicularComponent = raycast.direction - parallelComponent local newDirection = perpendicularComponent + (parallelComponent + towards * deltaTime) raycast.direction = newDirection.Unit * raycast.direction.Magnitude end end  local gravity = Vector3.new(0, -workspace.Gravity, 0) local flashcast = Flashcast.new():afterStep(accelerate(gravity))  "},{"title":"Reflection​","type":1,"pageTitle":"Useful Hooks","url":"/flashcast/docs/useful-hooks#reflection","content":"local function reflect(raycast: Flashcast.Raycast, deltaTime: number) local touched = raycast.state.touched if touched then local reflectedDirection = raycast.direction - (2 * raycast.direction:Dot(touched.Normal) * touched.Normal) raycast.position = touched.Position raycast.direction = reflectedDirection end end  local flashcast = Flashcast.new():afterStep(reflect)  "},{"title":"Visualization​","type":1,"pageTitle":"Useful Hooks","url":"/flashcast/docs/useful-hooks#visualization","content":"local function visualize(duration: number) return function(raycast: Flashcast.Raycast, deltaTime: number) local adornment = Instance.new(&quot;ConeHandleAdornment&quot;) adornment.Adornee = workspace.Terrain adornment.Radius = 0.25 adornment.Color3 = Color3.new() adornment.Transparency = 0.5 adornment.CFrame = CFrame.lookAt(raycast.position, raycast.position + raycast.direction) adornment.Height = raycast.direction.Magnitude * deltaTime adornment.Parent = workspace.Terrain Debris:AddItem(adornment, duration) end end  local duration = 1 local flashcast = Flashcast.new():beforeStep(visualize(duration))  "},{"title":"Flashcast","type":0,"sectionRef":"#","url":"/flashcast/api/Flashcast","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#types","content":" "},{"title":"StepCallback​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#StepCallback","content":"&lt;/&gt; type StepCallback = ( raycast: Raycast, deltaTime: number ) → Result? Takes a Raycast instance and delta time and gives back a Result  "},{"title":"Raycast​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#Raycast","content":"&lt;/&gt; interface Raycast { position: Vector3 direction: Vector3 raycastParams?: RaycastParams results: {RaycastResult}-- RaycastResults ordered from earliest to latest state: { lastTick: number, distanceTraveled: number, touched?: RaycastResult, [any]: any }-- for preserving state throughout the raycasting stopped: Signal&lt;()&gt; stop: (self: Raycast) → () }  "},{"title":"Properties​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#properties","content":" "},{"title":"Result​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#Result","content":"&lt;/&gt; Flashcast.Result: {Stop} Different results (outcomes) of step callbacks "},{"title":"Functions​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#new","content":"&lt;/&gt; Flashcast.new() → Flashcast   "},{"title":"worldRoot​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#worldRoot","content":"&lt;/&gt; Flashcast:worldRoot(worldRoot: WorldRoot ) → Flashcast Overrides the default WorldRoot (Workspace)  "},{"title":"tick​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#tick","content":"&lt;/&gt; Flashcast:tick(tick: number | (raycast: Raycast) → number) → Flashcast Configures the amount of rays cast per second info If the tick passed is a callback, it will run every frame. This is not for expensive operations.  "},{"title":"beforeStep​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#beforeStep","content":"&lt;/&gt; Flashcast:beforeStep(step: StepCallback) → Flashcast Adds a step callback scheduled to run before calculations  "},{"title":"afterStep​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#afterStep","content":"&lt;/&gt; Flashcast:afterStep(step: StepCallback) → Flashcast Adds a step callback scheduled to run after calculations  "},{"title":"onStop​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#onStop","content":"&lt;/&gt; Flashcast:onStop(callback: (raycast: Raycast) → ()) → Flashcast Adds a callback scheduled to run when a raycast is stopped  "},{"title":"spatialQuery​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#spatialQuery","content":"&lt;/&gt; Flashcast:spatialQuery(query: ( worldRoot: WorldRoot , origin: Vector3 , direction: Vector3 , raycast: Raycast ) → RaycastResult?) → Flashcast Overrides the default spatial query (WorldRoot.Raycast)  "},{"title":"event​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#event","content":"&lt;/&gt; Flashcast:event(event: RBXScriptSignal ) → Flashcast Overrides the default lifecycle event (RunService.Heartbeat)  "},{"title":"cast​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#cast","content":"&lt;/&gt; Flashcast:cast( origin: Vector3 , direction: Vector3 , raycastParams?: RaycastParams, defaultState?: {[any]: any} ) → Raycast   "},{"title":"clear​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#clear","content":"&lt;/&gt; Flashcast:clear() → () Stops all active raycasts  "},{"title":"destroy​","type":1,"pageTitle":"Flashcast","url":"/flashcast/api/Flashcast#destroy","content":"&lt;/&gt; Flashcast:destroy() → () Enables the Flashcast instance to be garbage collected "}]
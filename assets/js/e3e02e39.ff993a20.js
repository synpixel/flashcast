"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[914],{28530:e=>{e.exports=JSON.parse('{"functions":[{"name":"tick","desc":"Configures the amount of rays cast per second\\r","params":[{"name":"tick","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Flashcast"}],"function_type":"method","source":{"line":41,"path":"src/init.luau"}},{"name":"beforeStep","desc":"Adds a step callback scheduled to run before calculations\\r","params":[{"name":"step","desc":"","lua_type":"StepCallback"}],"returns":[{"desc":"","lua_type":"Flashcast"}],"function_type":"method","source":{"line":51,"path":"src/init.luau"}},{"name":"afterStep","desc":"Adds a step callback scheduled to run after calculations\\r","params":[{"name":"step","desc":"","lua_type":"StepCallback"}],"returns":[{"desc":"","lua_type":"Flashcast"}],"function_type":"method","source":{"line":61,"path":"src/init.luau"}},{"name":"spatialQuery","desc":"Overrides the default spatial query ([WorldRoot.Raycast](https://create.roblox.com/docs/reference/engine/classes/WorldRoot#Raycast))\\r","params":[{"name":"query","desc":"","lua_type":"(raycast: Raycast, deltaTime: number) -> RaycastResult?"}],"returns":[{"desc":"","lua_type":"Flashcast"}],"function_type":"method","source":{"line":71,"path":"src/init.luau"}},{"name":"cast","desc":"This will yield until one of the step callbacks returns Result.Stop\\r","params":[{"name":"origin","desc":"","lua_type":"Vector3"},{"name":"direction","desc":"","lua_type":"Vector3"},{"name":"raycastParams?","desc":"","lua_type":"RaycastParams"}],"returns":[{"desc":"","lua_type":"Raycast"}],"function_type":"method","yields":true,"source":{"line":84,"path":"src/init.luau"}},{"name":"new","desc":"","params":[],"returns":[{"desc":"","lua_type":"Flashcast"}],"function_type":"static","source":{"line":157,"path":"src/init.luau"}}],"properties":[{"name":"Result","desc":"Different results (outcomes) of step callbacks\\r","lua_type":"{ Pass, Stop }","source":{"line":31,"path":"src/init.luau"}}],"types":[{"name":"StepCallback","desc":"Takes a Raycast instance and delta time and gives back a new direction or a [Result](/api/Flashcast/#Result)\\r","lua_type":"(raycast: Raycast, deltaTime: number) -> Vector3 | Result","source":{"line":6,"path":"src/init.luau"}},{"name":"Raycast","desc":"","fields":[{"name":"position","lua_type":"Vector3","desc":""},{"name":"direction","lua_type":"Vector3","desc":""},{"name":"raycastParams?","lua_type":"RaycastParams","desc":""},{"name":"results","lua_type":"{ RaycastResult }","desc":"RaycastResults ordered from earliest to latest"},{"name":"state","lua_type":"{ lastTick: number, distanceTraveled: number, touched?: RaycastResult, [any]: any }","desc":"for preserving state throughout the raycasting"},{"name":"tick","lua_type":"number","desc":"by default the Flashcast instance\'s tick"}],"source":{"line":16,"path":"src/init.luau"}}],"name":"Flashcast","desc":"","source":{"line":26,"path":"src/init.luau"}}')}}]);
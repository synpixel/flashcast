"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),i=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),f=r,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return n?a.createElement(m,l(l({ref:t},u),{},{components:n})):a.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:r,l[1]=c;for(var i=2;i<o;i++)l[i]=n[i];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},58661:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var a=n(87462),r=(n(67294),n(3905));const o={sidebar_position:3},l="Useful Hooks",c={unversionedId:"useful-hooks",id:"useful-hooks",title:"Useful Hooks",description:'Here\'s a small collection of "hooks" for common behavior that you could want to implement on a bullet.',source:"@site/docs/useful-hooks.md",sourceDirName:".",slug:"/useful-hooks",permalink:"/flashcast/docs/useful-hooks",draft:!1,editUrl:"https://github.com/synpixel/flashcast/edit/main/docs/useful-hooks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Usage",permalink:"/flashcast/docs/usage"}},s={},i=[{value:"Max Distance",id:"max-distance",level:2},{value:"Acceleration",id:"acceleration",level:2},{value:"Reflection",id:"reflection",level:2}],u={toc:i},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"useful-hooks"},"Useful Hooks"),(0,r.kt)("p",null,'Here\'s a small collection of "hooks" for common behavior that you could want to implement on a bullet.'),(0,r.kt)("h2",{id:"max-distance"},"Max Distance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local function maxDistance(distance: number)\n    return function(raycast: Flashcast.Raycast)\n        if raycast.state.distanceTraveled > distance then\n            return Flashcast.Result.Stop\n        end\n        return\n    end\nend\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local flashcast = Flashcast.new():beforeStep(maxDistance(1000))\n")),(0,r.kt)("h2",{id:"acceleration"},"Acceleration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local function accelerate(towards: Vector3)\n    return function(raycast: Flashcast.Raycast, deltaTime: number)\n        if towards.Magnitude == 0 then\n            return\n        end\n\n        local parallelComponent = raycast.direction:Dot(towards.Unit) * towards.Unit\n        local perpendicularComponent = raycast.direction - parallelComponent\n        local newDirection = perpendicularComponent + (parallelComponent + towards * deltaTime)\n        raycast.direction = newDirection.Unit * raycast.direction.Magnitude\n    end\nend\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local gravity = Vector3.new(0, -workspace.Gravity, 0)\nlocal flashcast = Flashcast.new():afterStep(accelerate(gravity))\n")),(0,r.kt)("h2",{id:"reflection"},"Reflection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local function reflect(raycast: Flashcast.Raycast, deltaTime: number)\n    local touched = raycast.state.touched\n    if touched then\n        local reflectedDirection = raycast.direction - (2 * raycast.direction:Dot(touched.Normal) * touched.Normal)\n        raycast.position = touched.Position\n        raycast.direction = reflectedDirection\n    end\nend\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"local flashcast = Flashcast.new():afterStep(reflect)\n")))}d.isMDXComponent=!0}}]);